/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  WormholeRelayerMock,
  WormholeRelayerMockInterface,
} from "../WormholeRelayerMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "timestamp",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "Delivery",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "deliver",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
    ],
    name: "getRegisteredWormholeRelayerContract",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "wormholeRelayer",
        type: "bytes32",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506102be806100206000396000f3fe6080604052600436106100345760003560e01c806321f8eaac1461003957806322133eaf1461006d5780633e8267e714610080575b600080fd5b34801561004557600080fd5b5061006b61005436600461014e565b61ffff909116600090815260208190526040902055565b005b61006b61007b36600461018e565b6100c3565b34801561008c57600080fd5b506100b161009b36600461023f565b61ffff1660009081526020819052604090205490565b60405190815260200160405180910390f35b61036481810151610360916000906100dc602682610261565b858101600801516040805163ffffffff8716815267ffffffffffffffff8316602082015281519295509293507fa7421c55f16a21cc01e868b0e8385835033d88f4fced0cc962676aa69839d8de928290030190a15050505050565b803561ffff8116811461014957600080fd5b919050565b6000806040838503121561016157600080fd5b61016a83610137565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156101a057600080fd5b813567ffffffffffffffff808211156101b857600080fd5b818401915084601f8301126101cc57600080fd5b8135818111156101de576101de610178565b604051601f8201601f19908116603f0116810190838211818310171561020657610206610178565b8160405282815287602084870101111561021f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561025157600080fd5b61025a82610137565b9392505050565b8082018082111561028257634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220c92ad855562572e97ad5bf58aee7dc67cd1af66ec428ee22a42b2bea17c99b7964736f6c63430008180033";

type WormholeRelayerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WormholeRelayerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WormholeRelayerMock__factory extends ContractFactory {
  constructor(...args: WormholeRelayerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      WormholeRelayerMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): WormholeRelayerMock__factory {
    return super.connect(runner) as WormholeRelayerMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WormholeRelayerMockInterface {
    return new Interface(_abi) as WormholeRelayerMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WormholeRelayerMock {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as WormholeRelayerMock;
  }
}
